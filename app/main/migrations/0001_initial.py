# Generated by Django 5.1 on 2024-09-19 06:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('expiry_date', models.IntegerField()),
                ('mass', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Userdj',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_now', models.DateField()),
                ('capital', models.FloatField()),
            ],
            options={
                'db_table': 'userdj',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('warehouse_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=32)),
                ('max_warehouse_capacity', models.IntegerField()),
            ],
            options={
                'db_table': 'warehouse',
            },
        ),
        migrations.CreateModel(
            name='Cheque',
            fields=[
                ('cheque_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.customer')),
            ],
            options={
                'db_table': 'cheque',
            },
        ),
        migrations.CreateModel(
            name='OrderList',
            fields=[
                ('order_list_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(default=0)),
                ('date_order', models.DateField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
            options={
                'db_table': 'order_list',
            },
        ),
        migrations.CreateModel(
            name='DebitingList',
            fields=[
                ('debiting_list_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('date_of_debiting', models.DateField()),
                ('fresh', models.BooleanField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
            options={
                'db_table': 'debiting_list',
            },
        ),
        migrations.CreateModel(
            name='ChequeProduct',
            fields=[
                ('cheque_product_id', models.AutoField(primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.IntegerField()),
                ('cheque', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.cheque')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.product')),
            ],
            options={
                'db_table': 'cheque_product',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('recipe_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
                ('finish_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
            options={
                'db_table': 'recipe',
            },
        ),
        migrations.CreateModel(
            name='RecipeProducts',
            fields=[
                ('recipe_products_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.recipe')),
            ],
            options={
                'db_table': 'recipe_products',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('supplier_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'supplier',
                'constraints': [models.UniqueConstraint(fields=('name',), name='unique_supplier_name')],
            },
        ),
        migrations.AddField(
            model_name='cheque',
            name='supplier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.supplier'),
        ),
        migrations.CreateModel(
            name='SupplierProductPrice',
            fields=[
                ('supplier_product_price_id', models.AutoField(primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.supplier')),
            ],
            options={
                'db_table': 'supplier_product_price',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='main.warehouse'),
        ),
        migrations.CreateModel(
            name='WarehouseProducts',
            fields=[
                ('warehouse_products_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('production_date', models.DateField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
            options={
                'db_table': 'WarehouseProducts',
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('workshop_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('max_capacity', models.FloatField()),
                ('recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.recipe')),
            ],
            options={
                'db_table': 'workshop',
            },
        ),
        migrations.AddConstraint(
            model_name='recipe',
            constraint=models.UniqueConstraint(fields=('finish_product', 'name'), name='unique_recipe_product_recipe_name'),
        ),
        migrations.AddConstraint(
            model_name='recipeproducts',
            constraint=models.UniqueConstraint(fields=('recipe', 'product'), name='unique_recipe_product'),
        ),
        migrations.AlterUniqueTogether(
            name='supplierproductprice',
            unique_together={('supplier', 'product')},
        ),
    ]
